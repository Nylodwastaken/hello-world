#function to display the board

from IPython.display import clear_output

def display_board(board):
    
    clear_output()
    
    print(board[7]+" ¦ "+board[8]+" ¦ "+board[9])
    print("---------")
    print(board[4]+" ¦ "+board[5]+" ¦ "+board[6])
    print("---------")
    print(board[1]+" ¦ "+board[2]+" ¦ "+board[3])
       
    pass



#function to take player input on what marker they want to play as and validate it

def player_input():
    marker = "wrong"
    while marker not in ["X","O"] :
        
        
        marker = input("You are Player 1.\nWould you like to play as X or O?\n")
        
        if marker not in ["X","O"]:
            clear_output()
            print("I'm afraid that is not a valid marker. Please choose either X or O.")
            
    return marker   


#function to place markers on board

def place_marker(board, marker, position):
    
    board[position] = marker


#function to check whether player won

def win_check(board, mark):
    if board[1] == board[2] == board[3] == mark:
        return True
    elif board[4] == board[5] == board[6] == mark:
        return True
    elif board[7] == board[8] == board[9] == mark:
        return True
    elif board[1] == board[4] == board[7] == mark:
        return True
    elif board[2] == board[5] == board[8] == mark:
        return True
    elif board[3] == board[6] == board[9] == mark:
        return True
    elif board[7] == board[5] == board[3] == mark:
        return True
    elif board[1] == board[5] == board[9] == mark:
        return True
    else:
        return False

#function to decide which player goes first

import random

def choose_first():
    playnum = random.randint(1,2)
    print(f"Player {playnum} will go first.")
    return playnum
    


#function to check whether a given position already has a marker in it or not

def space_check(empty_board, position):
    return board[position] == "X" or "O"



#function to check whether board was full

def full_board_check(board):
    total = 0
    for char in board:
        if char in ("X", "O"):
            total += 1
    return total==9
    
        
        

#function to ask player what position they want to put their marker in and validate it

def player_choice(board):
    pos = True
    while pos:
        next_pos = int(input("Please choose a cell(1-9) to put your mark in. The position of each cell corresponds to the NUMPAD on your keyboard."))
        if next_pos in range(1,10):
            pos = False
            if (space_check(board, next_pos)):
                return next_pos
            else:
                pass
        else:
            pass
        
    


#function to ask player whther they want to play again or not

def replay():
    again = True
    while again:
        gameon = input("Would you like to play again?\n Yes or No?")
    
        if gameon in ("Yes", "yes", "Y", "y"):
            return True
            again = False
        elif gameon in ("No", "no", "N", "n"):
            return False
            again = False
        else:
            again = True




###THE GAME ITSELF


while True:
    #setup for the game
    print("Welcome to Tic Tac Toe!")
    empty_board = ['#','','','','','','','','','']
    
    #assigning markers
    p1_marker = player_input()
    p2_marker = "placeholder marker"
    
    if p1_marker == "X":
        p2_marker = "O"
    else:
        p2_marker = "X"
        
    if choose_first()==2:
        temp = p1_marker
        p1_marker = p2_marker
        p2_marker = temp
    
     #ready to play   
    if input("Are you ready to play?") in ("no","NO"):
        break
    else:
        pass
    

    game_on = True


    while game_on:
        #Player 1 Turn  
        display_board(empty_board)
        position = player_choice(empty_board)
        place_marker(empty_board, p1_marker, position)
        if win_check(empty_board, p1_marker) == True:
            print("Congratulations you WIN!")
            if replay() == True:
                game_on = True
                break
            else:
                game_on = False
                break
        else:
            pass
        
        if full_board_check(empty_board):
            print("It's a TIE!")
            if replay() == True:
                game_on = True
                break
            else:
                game_on = False
                break
        else:
            pass
        
        # Player2's turn
        display_board(empty_board)
        position = player_choice(empty_board)
        place_marker(empty_board, p2_marker, position)
        if win_check(empty_board, p2_marker) == True:
            print("Congratulations you WIN!")
            if replay() == True:
                game_on = True
                pass
            else:
                game_on = False
                break
        else:
            pass
        
        
        if full_board_check(empty_board):
            print("It's a TIE!")
            if replay() == True:
                game_on = True
                pass
            else:
                game_on = False
                break
        else:
            pass
    break
        
            
  
